Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o (exit)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                              ButtonPadControllerSPI_v15.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                              ButtonPadControllerSPI_v15.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

bluef               0x10              ButtonPadControllerSPI_v15.o
redf                0x10              ButtonPadControllerSPI_v15.o
buttons             0x10              ButtonPadControllerSPI_v15.o
greenf              0x10              ButtonPadControllerSPI_v15.o
incoming_board      0x40              ButtonPadControllerSPI_v15.o
command_id          0x1               ButtonPadControllerSPI_v15.o
outgoing_board      0x40              ButtonPadControllerSPI_v15.o
command_byte        0x1               ButtonPadControllerSPI_v15.o

↵
Speichereinrichtung
↵

Name             Ursprung           Länge             Eigenschaften
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
LOAD ButtonPadControllerSPI_v15.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/libatmega168.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x7a2
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_11
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
 .text          0x00000000000000a6      0x47e ButtonPadControllerSPI_v15.o
                0x00000000000000a6                __vector_3
                0x0000000000000246                fill16
                0x000000000000025e                delay_short
                0x0000000000000272                clock_byte
                0x00000000000002ee                newcolor
                0x000000000000035a                display
                0x00000000000004a2                write_to_EEPROM
                0x00000000000004b2                read_from_EEPROM
                0x00000000000004c0                ioinit
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000524        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000524                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000524      0x27a ButtonPadControllerSPI_v15.o
                0x0000000000000524                main
 .text.libgcc.mul
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                0x000000000000079e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000079e        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                0x000000000000079e                exit
                0x000000000000079e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000079e        0x4 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000007a2                _etext = .

.data           0x0000000000800100        0x2 load address 0x00000000000007a2
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
 .data          0x0000000000800100        0x1 ButtonPadControllerSPI_v15.o
                0x0000000000800100                NUMBER_OF_BOARDS
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
 *fill*         0x0000000000800101        0x1 
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0xd3
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
 .bss           0x0000000000800102       0x11 ButtonPadControllerSPI_v15.o
                0x0000000000800102                enter_command_mode
                0x0000000000800104                bit_count_output
                0x0000000000800106                bit_count_input
                0x0000000000800108                board_complete
                0x000000000080010a                outgoing_board_index
                0x000000000080010c                boards_received
                0x000000000080010e                incoming_board_index
                0x0000000000800110                frame_num
                0x0000000000800112                row
 .bss           0x0000000000800113        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800113        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800113        0x0 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800113       0xc2 ButtonPadControllerSPI_v15.o
                0x0000000000800113                bluef
                0x0000000000800123                redf
                0x0000000000800133                buttons
                0x0000000000800143                greenf
                0x0000000000800153                incoming_board
                0x0000000000800193                command_id
                0x0000000000800194                outgoing_board
                0x00000000008001d4                command_byte
                0x00000000008001d5                PROVIDE (__bss_end, .)
                0x00000000000007a2                __data_load_start = LOADADDR (.data)
                0x00000000000007a4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001d5        0x0
                0x00000000008001d5                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001d5                PROVIDE (__noinit_end, .)
                0x00000000008001d5                _end = .
                0x00000000008001d5                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ButtonPadControllerSPI_v15.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 ButtonPadControllerSPI_v15.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x7a8
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x7a8 ButtonPadControllerSPI_v15.o

.debug_abbrev   0x0000000000000000      0x235
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x235 ButtonPadControllerSPI_v15.o

.debug_line     0x0000000000000000      0x1fc
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000      0x1fc ButtonPadControllerSPI_v15.o

.debug_frame    0x0000000000000000      0x124
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x124 ButtonPadControllerSPI_v15.o

.debug_str      0x0000000000000000      0x2d7
 *(.debug_str)
 .debug_str     0x0000000000000000      0x2d7 ButtonPadControllerSPI_v15.o
                                        0x310 (size before relaxing)

.debug_loc      0x0000000000000000      0x646
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x646 ButtonPadControllerSPI_v15.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x0000000000000000       0x50
 *(.debug_ranges)
 .debug_ranges  0x0000000000000000       0x50 ButtonPadControllerSPI_v15.o

.debug_macro
 *(.debug_macro)
OUTPUT(ButtonPadControllerSPI_v15.elf elf32-avr)
LOAD linker stubs

Kreuzreferenz-Tabelle

Symbol                                            Datei
NUMBER_OF_BOARDS                                  ButtonPadControllerSPI_v15.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__bss_end                                         /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_clear_bss.o)
                                                  ButtonPadControllerSPI_v15.o
__do_copy_data                                    /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_copy_data.o)
                                                  ButtonPadControllerSPI_v15.o
__heap_end                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__init                                            /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__stack                                           /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_1                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_10                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_11                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_12                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_13                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_14                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_15                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_16                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_17                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_18                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_19                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_2                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_20                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_21                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_22                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_23                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_24                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_25                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_3                                        ButtonPadControllerSPI_v15.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_4                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_5                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_6                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_7                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_8                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_9                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vector_default                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
__vectors                                         /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
_exit                                             /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
bit_count_input                                   ButtonPadControllerSPI_v15.o
bit_count_output                                  ButtonPadControllerSPI_v15.o
bluef                                             ButtonPadControllerSPI_v15.o
board_complete                                    ButtonPadControllerSPI_v15.o
boards_received                                   ButtonPadControllerSPI_v15.o
buttons                                           ButtonPadControllerSPI_v15.o
clock_byte                                        ButtonPadControllerSPI_v15.o
command_byte                                      ButtonPadControllerSPI_v15.o
command_id                                        ButtonPadControllerSPI_v15.o
delay_short                                       ButtonPadControllerSPI_v15.o
display                                           ButtonPadControllerSPI_v15.o
enter_command_mode                                ButtonPadControllerSPI_v15.o
exit                                              /usr/lib/gcc/avr/4.9.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
fill16                                            ButtonPadControllerSPI_v15.o
frame_num                                         ButtonPadControllerSPI_v15.o
greenf                                            ButtonPadControllerSPI_v15.o
incoming_board                                    ButtonPadControllerSPI_v15.o
incoming_board_index                              ButtonPadControllerSPI_v15.o
ioinit                                            ButtonPadControllerSPI_v15.o
main                                              ButtonPadControllerSPI_v15.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr5/crtatmega168.o
newcolor                                          ButtonPadControllerSPI_v15.o
outgoing_board                                    ButtonPadControllerSPI_v15.o
outgoing_board_index                              ButtonPadControllerSPI_v15.o
read_from_EEPROM                                  ButtonPadControllerSPI_v15.o
redf                                              ButtonPadControllerSPI_v15.o
row                                               ButtonPadControllerSPI_v15.o
write_to_EEPROM                                   ButtonPadControllerSPI_v15.o
